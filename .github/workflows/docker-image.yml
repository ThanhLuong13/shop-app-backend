name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Log in to Docker Hub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Start MySQL Container
        run: docker-compose -f deployment.yml up -d mysql8-container

      - name: Start PhpMyAdmin Container
        run: docker-compose -f deployment.yml up -d phpmyadmin8-container

      - name: Start ShopApp Spring Container
        run: |
          docker-compose -f deployment.yml up -d --build shopapp-spring-container
          docker tag shopapp-spring:1.0.0 ${{ secrets.DOCKERHUB_USERNAME }}/shopapp-spring:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/shopapp-spring:latest

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v3
      - name: Connect to EC2
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          HOSTNAME: ${{secrets.SSH_HOST}}
          USER_NAME: ${{secrets.USER_NAME}}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key "${USER_NAME}@${HOSTNAME}" '
          
            cd ./docker
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
            docker-compose -f ./deployment.yml rm -s -f shopapp-spring-container
            docker rm shopapp-spring-container
            docker-compose -f ./deployment.yml up -d shopapp-spring-container
            '


